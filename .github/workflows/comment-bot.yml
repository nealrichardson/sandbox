# This workflow allows you to trigger nightly or other workflows with
# workflow_dispatch via PR comments. It also creates and updates a check run
# to provide feedback on the status of the triggered workflow.
#
# To use this workflow, comment on a PR with:
#
# /run workflow-name arg1=value1 arg2=value2
#
name: PR Comment Workflow Triggers

on:
  issue_comment:
    types: [created]

permissions:
  actions: write
  contents: read
  pull-requests: write
  checks: write

jobs:
  trigger-workflow:
    # Only run on pull request comments
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest

    steps:
      - name: Check comment for trigger commands
        id: check-comment
        run: |
          comment="${{ github.event.comment.body }}"
          echo "Comment: $comment"

          # Find all lines that start with /run (perhaps with leading spaces)
          command_lines=$(echo "$comment" | grep -E '^\s*/run')
          # Commands will be like /run workflow_name arg=value ...
          # We will look for specific commands to trigger workflows
          echo "Command lines: $command_lines"
          # If there are no command lines, set trigger to false
          if [ -z "$command_lines" ]; then
            exit 0
          fi

          # We now have lines like `/run workflow_name arg=value ...`
          # Extract workflow_name from the first command line
          # For simplicity, we will only consider the first command line
          first_command=$(echo "$command_lines" | head -n 1)
          echo "First command: $first_command"
          # Extract the command (the part after /run and before any spaces) using sed
          # If the command is like `/run workflow-name`, we want to extract `workflow-name`
          command=$(echo "$first_command" | sed -E 's@^ */run +@@; s/ .*$//')
          echo "Extracted command: $command"
          echo "workflow=$command" >> $GITHUB_OUTPUT
          # Now extract arguments (if any)
          # For each arg=value pair, put a -f in front of them for the gh command
          args=$(echo "$first_command" | awk '{for(i=3;i<=NF;i++) print $i}')
          arg_flags=""
          for arg in $args; do
            arg_flags="$arg_flags -f $arg"
          done
          echo "arg_flags: $arg_flags"
          echo "arg_flags=$arg_flags" >> $GITHUB_OUTPUT

      - name: Get PR details
        if: steps.check-comment.outputs.workflow != ''
        id: get-pr
        run: |
          pr_number="${{ github.event.issue.number }}"
          pr_data=$(gh api repos/${{ github.repository }}/pulls/$pr_number)
          branch=$(echo "$pr_data" | jq -r '.head.ref')
          head_sha=$(echo "$pr_data" | jq -r '.head.sha')
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "head_sha=$head_sha" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger workflow
        if: steps.check-comment.outputs.workflow != ''
        id: trigger-workflow
        run: |
          set -x
          workflow="${{ steps.check-comment.outputs.workflow }}"
          args="${{ steps.check-comment.outputs.arg_flags }}"
          branch="${{ steps.get-pr.outputs.branch }}"

          echo "Triggering workflow: $workflow on branch: $branch"

          # Trigger workflow via API
          if [ -n "$args" ]; then
            # Build the API call with inputs
            inputs_args=""
            for arg in $(echo "$args" | sed 's/-f //g'); do
              key=$(echo "$arg" | cut -d= -f1)
              value=$(echo "$arg" | cut -d= -f2-)
              inputs_args="$inputs_args -f inputs[$key]=\"$value\""
            done
            
            echo "Inputs args: $inputs_args"
            
            eval "gh api \
              --method POST \
              -H \"Accept: application/vnd.github+json\" \
              -H \"X-GitHub-Api-Version: 2022-11-28\" \
              /repos/${{ github.repository }}/actions/workflows/$workflow.yml/dispatches \
              -f ref=\"$branch\" \
              $inputs_args"
          else
            # No inputs
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/actions/workflows/$workflow.yml/dispatches \
              -f ref="$branch"
          fi
          
          # Extract run ID from the response (GitHub doesn't return it directly, need to query)
          sleep 2
          run_id=$(gh run list --workflow="$workflow.yml" --repo ${{ github.repository }} --branch="$branch" --limit=1 --json databaseId --jq '.[0].databaseId')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create check run
        if: steps.check-comment.outputs.workflow != ''
        id: create-check
        run: |
          workflow="${{ steps.check-comment.outputs.workflow }}"
          head_sha="${{ steps.get-pr.outputs.head_sha }}"

          check_run_id=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/check-runs \
            -f name="Manual: $workflow" \
            -f head_sha="$head_sha" \
            -f status="queued" \
            -f started_at="$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            -f 'output[title]=Workflow Triggered' \
            -f 'output[summary]=Manually triggered workflow is starting...' \
            --jq '.id')

          echo "check_run_id=$check_run_id" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add reaction to comment
        if: steps.check-comment.outputs.workflow != ''
        run: |
          gh api \
            --method POST \
            repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
            --field content=rocket
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update check run with workflow link
        if: steps.check-comment.outputs.workflow != ''
        run: |
          workflow="${{ steps.check-comment.outputs.workflow }}"
          branch="${{ steps.get-pr.outputs.branch }}"
          check_run_id="${{ steps.create-check.outputs.check_run_id }}"
          run_id="${{ steps.trigger-workflow.outputs.run_id }}"

          # Update check run with workflow link and in_progress status
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/check-runs/$check_run_id \
            -f status="in_progress" \
            -f details_url="https://github.com/${{ github.repository }}/actions/runs/$run_id" \
            -f 'output[title]=Workflow Running' \
            -f "output[summary]=The \`$workflow\` workflow is now running on branch \`$branch\`. [View workflow run](https://github.com/${{ github.repository }}/actions/runs/$run_id)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR with status
        if: steps.check-comment.outputs.workflow != ''
        run: |
          workflow="${{ steps.check-comment.outputs.workflow }}"
          branch="${{ steps.get-pr.outputs.branch }}"
          run_id="${{ steps.trigger-workflow.outputs.run_id }}"

          gh pr comment ${{ github.event.issue.number }} --repo ${{ github.repository }} --body \
            "üöÄ Triggered \`$workflow\` workflow on branch \`$branch\`. Check the [workflow run](https://github.com/${{ github.repository }}/actions/runs/$run_id) for progress."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add reaction to comment on failure
        if: failure()
        run: |
          gh api \
            --method POST \
            repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
            --field content=confused
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR with failure details
        if: failure()
        run: |
          # Get the job ID for this specific job
          job_id=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs \
            --jq ".jobs[] | select(.name == \"${{ github.job }}\") | .id")
          
          gh pr comment ${{ github.event.issue.number }} --repo ${{ github.repository }} --body \
            "‚ùå Failed to trigger workflow. Check the [comment bot logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/$job_id) for details."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}